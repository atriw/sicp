(define (implement-analyze-if-fail evaluator syntax env-model)
  (define analyze (evaluator 'analyze))
  (define if-fail-predicate (syntax 'if-fail-predicate))
  (define if-fail-alternative (syntax 'if-fail-alternative))

  (define (analyze-if-fail exp)
    (let ((pproc (analyze (if-fail-predicate exp)))
          (aproc (analyze (if-fail-alternative exp))))
      (lambda (env succeed fail)
        (pproc env
               (lambda (val fail2)
                 (succeed val fail2))
               (lambda ()
                 (aproc env
                        (lambda (val fail3)
                          (succeed val fail3))
                        fail))))))
  ((evaluator 'implement-analyze-if-fail) analyze-if-fail))

(define (new-if-fail-syntax syntax)
  (define (tagged-list? exp tag)
    (if (pair? exp)
      (eq? (car exp) tag)
      #f))
  (define (if-fail? exp) (tagged-list? exp 'if-fail))
  (define (if-fail-predicate exp) (cadr exp))
  (define (if-fail-alternative exp) (caddr exp))
  (define (dispatch m)
    (cond ((eq? m 'if-fail?) if-fail?)
          ((eq? m 'if-fail-predicate) if-fail-predicate)
          ((eq? m 'if-fail-alternative) if-fail-alternative)
          (else (syntax m))))
  dispatch)
