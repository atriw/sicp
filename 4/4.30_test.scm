(load "test.scm")
(load "evaluator_test.scm")

(define (test)
  (define test-suite
    (setup-test
      '()
      '()
      (lambda (evaluator _ __)
        ((evaluator 'switch-normal-order) #t)
        ((evaluator 'switch-extent-normal-order) #t))))
  (define (test-fn eval env)
    (eval '(define (try a (b delay))
             (if (= a 1) a b)) env)
    (assert-eq 1 (eval '(try 1 (/ 1 0)) env) "Failed try delay")
    (assert-error (lambda () (eval '(try 2 (/ 1 0)) env)) "Failed try delay evaluated")
    (eval '(define (f a (b delay)) (+ a b b)) env)
    (eval '(define (g a (b delay-memo)) (+ a b b)) env)
    (eval '(define x 0) env)
    (eval '(f 1 (begin (set! x (+ x 1)) 1)) env)
    (assert-eq 2 (eval 'x env) "Failed delay not memo")
    (eval '(define x 0) env)
    (eval '(g 1 (begin (set! x (+ x 1)) 1)) env)
    (assert-eq 1 (eval 'x env) "Failed delay-memo"))
  (test-suite test-fn))
(test)
