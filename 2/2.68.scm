(load "../huffman.scm")

(define (encode message tree)
  (if (null? message)
    '()
    (append (encode-symbol (car message) tree)
            (encode (cdr message) tree))))

(define (encode-symbol symbol tree)
  (define (encode-symbol-branch branch)
    (if (leaf? branch)
      '()
      (let ((left (left-branch branch))
            (right (right-branch branch)))
        (cond ((and (not (null? right)) (memq symbol (symbols right)))
               (cons 1 (encode-symbol-branch right)))
              ((and (not (null? left)) (memq symbol (symbols left)))
               (cons 0 (encode-symbol-branch left)))
              (else (error "should not reach here: ENCODE-SYMBOL"))))))
  (cond ((null? tree) (error "null tree: ENCODE-SYMBOL"))
        ((not (memq symbol (symbols tree))) (error "unknown symbol: ENCODE-SYMBOL" symbol))
        (else (encode-symbol-branch tree))))
