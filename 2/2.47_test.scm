(load "test.scm")
(load "2/2.46.scm")
(load "2/2.47.scm")

(define (test)
  (let ((v1 (make-vect 1 2))
        (v2 (make-vect 3 4))
        (v3 (make-vect 5 6)))
    (let ((frame1 (make-frame1 v1 v2 v3))
          (frame2 (make-frame2 v1 v2 v3)))
      (begin (assert-eq v1 (origin-frame1 frame1) "Failed origin-frame1")
             (assert-eq v2 (edge1-frame1 frame1) "Failed edge1-frame1")
             (assert-eq v3 (edge2-frame1 frame1) "Failed edge2-frame1")
             (assert-eq v1 (origin-frame2 frame2) "Failed origin-frame2")
             (assert-eq v2 (edge1-frame2 frame2) "Failed edge1-frame2")
             (assert-eq v3 (edge2-frame2 frame2) "Failed edge2-frame2")))))
(test)
