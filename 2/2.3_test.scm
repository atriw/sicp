(load "../test.scm")
(load "2.3.scm")

(define (test)
  (let ((p1 (make-point 1 1))
        (p2 (make-point 3 1))
        (p3 (make-point 1 4)))
    (let ((s1 (make-segment p1 p2))
          (s2 (make-segment p1 p3)))
      (let ((rect1 (make-rect1 p1 p2 p3))
            (rect2 (make-rect2 s1 s2)))
        (begin (assert-eq 10 ((perimeter length-rect1) rect1) "Failed perimeter rect1")
               (assert-eq 6 ((area length-rect1) rect1) "Failed area rect1")
               (assert-eq 10 ((perimeter length-rect2) rect2) "Failed perimeter rect2")
               (assert-eq 6 ((area length-rect2) rect2) "Failed area rect2"))))))
(test)
